<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorLoadSong" xml:space="preserve">
    <value>Errore durante il caricamento del Brano {0}</value>
  </data>
  <data name="ErrorOpenAlphaDream" xml:space="preserve">
    <value>Errore durante il caricamento della ROM GBA (AlphaDream)</value>
  </data>
  <data name="ErrorSaveMIDI" xml:space="preserve">
    <value>Errore Durante L'Esportazione in MIDI</value>
  </data>
  <data name="FilterOpenGBA" xml:space="preserve">
    <value>File GBA</value>
  </data>
  <data name="FilterSaveMIDI" xml:space="preserve">
    <value>File MIDI</value>
  </data>
  <data name="MenuData" xml:space="preserve">
    <value>Dati</value>
  </data>
  <data name="MenuFile" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="MenuOpenMP2K" xml:space="preserve">
    <value>Apri ROM GBA (MP2K)</value>
  </data>
  <data name="MenuSaveMIDI" xml:space="preserve">
    <value>Esporta Brano in MIDI</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Do;Do#;Re;Re#;Mi;Fa;Fa#;Sol;Sol#;La;La#;Si</value>
  </data>
  <data name="PlayerRest" xml:space="preserve">
    <value>Pausa</value>
  </data>
  <data name="PlayerNotes" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="PlayerPause" xml:space="preserve">
    <value>Pausa</value>
  </data>
  <data name="PlayerPlay" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="PlayerPosition" xml:space="preserve">
    <value>Posizione</value>
  </data>
  <data name="PlayerStop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="PlayerTempo" xml:space="preserve">
    <value>Tempo</value>
  </data>
  <data name="PlayerType" xml:space="preserve">
    <value>Tipo</value>
  </data>
  <data name="PlayerUnpause" xml:space="preserve">
    <value>Riprendi</value>
  </data>
  <data name="SuccessSaveMIDI" xml:space="preserve">
    <value>MIDI salvato in {0}.</value>
  </data>
  <data name="PlayPlaylistBody" xml:space="preserve">
    <value>Desideri riprodurre la seguente playlist?{0}</value>
  </data>
  <data name="PlayerNextSong" xml:space="preserve">
    <value>Brano Sucessivo</value>
  </data>
  <data name="PlayerPreviousSong" xml:space="preserve">
    <value>Brano Precedente</value>
  </data>
  <data name="EndPlaylistBody" xml:space="preserve">
    <value>Desideri interrompere la riproduzione della playlist attuale?</value>
  </data>
  <data name="ErrorOpenDSE" xml:space="preserve">
    <value>Errore durante il caricamento della Cartella DSE</value>
  </data>
  <data name="ErrorOpenMP2K" xml:space="preserve">
    <value>Errore durante il caricamento della ROM GBA (MP2K)</value>
  </data>
  <data name="ErrorOpenSDAT" xml:space="preserve">
    <value>Errore durante il caricamento del File SDAT</value>
  </data>
  <data name="FilterOpenSDAT" xml:space="preserve">
    <value>File SDAT</value>
  </data>
  <data name="MenuEndPlaylist" xml:space="preserve">
    <value>Termina la Playlist Attuale</value>
  </data>
  <data name="MenuOpenDSE" xml:space="preserve">
    <value>Apri Cartella DSE</value>
  </data>
  <data name="MenuOpenAlphaDream" xml:space="preserve">
    <value>Apri ROM GBA (AlphaDream)</value>
  </data>
  <data name="MenuOpenSDAT" xml:space="preserve">
    <value>Apri File SDAT</value>
  </data>
  <data name="MenuPlaylist" xml:space="preserve">
    <value>Playlist</value>
  </data>
  <data name="PlaylistMusic" xml:space="preserve">
    <value>Musica</value>
  </data>
  <data name="TrackViewerArguments" xml:space="preserve">
    <value>Argomenti</value>
  </data>
  <data name="TrackViewerEvent" xml:space="preserve">
    <value>Evento</value>
  </data>
  <data name="TrackViewerOffset" xml:space="preserve">
    <value>Posizione</value>
  </data>
  <data name="TrackViewerTicks" xml:space="preserve">
    <value>Tick</value>
  </data>
  <data name="TrackViewerTitle" xml:space="preserve">
    <value>Visualizzatore Traccia</value>
  </data>
  <data name="TrackViewerTrackX" xml:space="preserve">
    <value>Traccia {0}</value>
  </data>
  <data name="ConfigKeySubkey" xml:space="preserve">
    <value>La Chiave {0}</value>
  </data>
  <data name="ErrorBoolParse" xml:space="preserve">
    <value>"{0}" deve essere Vero o Falso.</value>
  </data>
  <data name="ErrorConfigColorInvalidKey" xml:space="preserve">
    <value>Il colore {0} non ha una chiave valida.</value>
  </data>
  <data name="ErrorConfigColorMissing" xml:space="preserve">
    <value>Il colore {0} non è definito.</value>
  </data>
  <data name="ErrorConfigColorRepeated" xml:space="preserve">
    <value>Il colore {0} è definito più di una volta tra decimale ed esadecimale.</value>
  </data>
  <data name="ErrorConfigKeyInvalid" xml:space="preserve">
    <value>"{0}" non è valido.</value>
  </data>
  <data name="ErrorConfigKeyMissing" xml:space="preserve">
    <value>"{0}" è mancante.</value>
  </data>
  <data name="ErrorConfigKeyNoEntries" xml:space="preserve">
    <value>"{0}" deve possedere almeno una voce.</value>
  </data>
  <data name="ErrorDSEInvalidHeaderVersion" xml:space="preserve">
    <value>Versione dell'header sconosciuta: 0x{0:X}</value>
  </data>
  <data name="ErrorDSEInvalidKey" xml:space="preserve">
    <value>Tasto del pianoforte non valido nella traccia {0} a 0x{1:X}: {2}</value>
  </data>
  <data name="ErrorAlphaDreamDSEMP2KSDATInvalidCommand" xml:space="preserve">
    <value>Comando non valido nella traccia {0} a 0x{1:X}: 0x{2:X}</value>
  </data>
  <data name="ErrorDSENoSequences" xml:space="preserve">
    <value>Non sono presenti file "bgm(NNNN).smd".</value>
  </data>
  <data name="ErrorGlobalConfig" xml:space="preserve">
    <value>Errore nel Caricamento della Configurazione Globale</value>
  </data>
  <data name="ErrorAlphaDreamMP2KCopyInvalidGameCode" xml:space="preserve">
    <value>Non è possibile copiare il Codice Gioco invalido "{0}"</value>
  </data>
  <data name="ErrorAlphaDreamMP2KMissingGameCode" xml:space="preserve">
    <value>Il Codice Gioco "{0}" non è presente.</value>
  </data>
  <data name="ErrorAlphaDreamMP2KParseGameCode" xml:space="preserve">
    <value>Errore nell'analisi del Codice Gioco "{0}" in "{1}"{2}</value>
  </data>
  <data name="ErrorAlphaDreamMP2KSongRepeated" xml:space="preserve">
    <value> La Playlist "{0}" presenta il brano {1} più volte definito tra decimale e esadecimale.</value>
  </data>
  <data name="ErrorAlphaDreamMP2KSongTableCounts" xml:space="preserve">
    <value>Il numero di "{0}" deve essere uguale a quello di "{1}".</value>
  </data>
  <data name="ErrorMP2KInvalidRunningStatusCommand" xml:space="preserve">
    <value>Comando di stato in esecuzione non valido nella traccia {0} a 0x{1:X}: 0x{2:X}</value>
  </data>
  <data name="ErrorMP2KSDATNestedCalls" xml:space="preserve">
    <value>Troppi eventi di chiamata nidificati nella traccia {0}</value>
  </data>
  <data name="ErrorParseConfig" xml:space="preserve">
    <value>Errore nell'analisi di "{0}"{1}</value>
  </data>
  <data name="ErrorSDATNoSequences" xml:space="preserve">
    <value>Questo archivio SDAT non ha sequenze.</value>
  </data>
  <data name="ErrorValueParse" xml:space="preserve">
    <value>"{0}" non è un valore intero.</value>
  </data>
  <data name="ErrorValueParseRanged" xml:space="preserve">
    <value>"{0}" deve essere compreso tra {1} e {2}.</value>
  </data>
  <data name="ErrorSaveWAV" xml:space="preserve">
    <value>Errore Durante L'Esportazione in WAV</value>
  </data>
  <data name="FilterSaveWAV" xml:space="preserve">
    <value>File WAV</value>
  </data>
  <data name="MenuSaveWAV" xml:space="preserve">
    <value>Esporta Brano in WAV</value>
  </data>
  <data name="SuccessSaveWAV" xml:space="preserve">
    <value>WAV salvato in {0}.</value>
  </data>
  <data name="ErrorSaveSF2" xml:space="preserve">
    <value>Errore Durante L'Esportazione in SF2</value>
  </data>
  <data name="FilterSaveSF2" xml:space="preserve">
    <value>File SF2</value>
  </data>
  <data name="MenuSaveSF2" xml:space="preserve">
    <value>Esporta VoiceTable In SF2</value>
  </data>
  <data name="SuccessSaveSF2" xml:space="preserve">
    <value>VoiceTable salvata in {0}.</value>
  </data>
  <data name="ErrorSaveDLS" xml:space="preserve">
    <value>Errore Durante L'Esportazione in DLS</value>
  </data>
  <data name="FilterSaveDLS" xml:space="preserve">
    <value>File DLS</value>
  </data>
  <data name="MenuSaveDLS" xml:space="preserve">
    <value>Esporta VoiceTable In DLS</value>
  </data>
  <data name="SuccessSaveDLS" xml:space="preserve">
    <value>VoiceTable salvata in {0}.</value>
  </data>
</root>